{"version":3,"sources":["components/EditableText.js","components/ResumeHeader.js","components/SchoolInfo.js","components/EducationForm.js","components/EditEducation.js","components/Education.js","components/ExperienceForm.js","components/WorkInfo.js","components/Experience.js","components/SkillsComponent.js","components/SkillsContainer.js","components/Resume.js","components/MyHeader.js","App.js","index.js"],"names":["EditableText","handleClick","setState","prevState","isActive","handleChange","event","target","name","value","handleKeyUp","charCode","state","text","this","className","props","class","autoFocus","onKeyPress","onBlur","type","onChange","onClick","initialText","React","Component","ResumeHeader","SchoolInfo","school","yearBegan","yearEnd","degreeTitle","gpa","editSchool","id","handleDelete","EducationForm","onSubmit","handleSubmit","required","placeholder","toggleForm","EditEducation","createRef","e","updateObject","current","defaultValue","ref","Education","preventDefault","obj","uniqid","activeEdit","degrees","concat","formIsActive","filter","item","toggleObject","index","findIndex","element","newArray","map","ExperienceForm","submitObjectChange","handleObjectChange","company","location","title","description","WorkInfo","editExperience","Experience","jobs","SkillsComponent","skill","skills","SkillsContainer","Resume","MyHeader","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.08662c97.chunk.js","sourcesContent":["import React from 'react';\r\nimport '../styles/EditableText.css'\r\n\r\n class EditableText extends React.Component {\r\n   constructor(){\r\n     super()\r\n     this.state = {\r\n       text: \"\",\r\n       isActive: false,\r\n     }\r\n   }\r\n   // possible rename\r\n   handleClick = () => {\r\n     this.setState(prevState => {\r\n      return {isActive: !prevState.isActive}\r\n     })\r\n   }\r\n\r\n   handleChange = (event) => {\r\n     const {name, value} = event.target;\r\n     this.setState({[name]: value})\r\n   }\r\n\r\n   handleKeyUp = (event) => {\r\n     if (event.charCode === 13) {\r\n      this.setState(prevState => {\r\n        return {isActive: !prevState.isActive}\r\n       })\r\n     }\r\n   }\r\n\r\n  render(){\r\n    if(this.state.isActive){\r\n      return (\r\n        <input\r\n          className={this.props.class}\r\n          autoFocus\r\n          onKeyPress={this.handleKeyUp}\r\n          onBlur={this.handleClick}\r\n          type=\"text\"\r\n          value={this.state.text}\r\n          name=\"text\"\r\n          onChange={this.handleChange}\r\n        />\r\n      )\r\n    }\r\n    else if (this.state.text){\r\n      return <p \r\n              onClick={this.handleClick}\r\n              className={this.props.class}\r\n              >\r\n                {this.state.text}\r\n              </p>\r\n    }\r\n    else {\r\n      return (\r\n            <p \r\n            onClick={this.handleClick}\r\n            className={this.props.class}\r\n            >\r\n              {this.props.initialText}\r\n            </p>\r\n        )\r\n    }\r\n    \r\n  }\r\n\r\n}\r\n\r\nexport default EditableText\r\n","import React from 'react';\r\nimport EditableText from './EditableText'\r\nimport '../styles/ResumeHeader.css'\r\n\r\nfunction ResumeHeader() {\r\n\r\n    return (\r\n      <div className=\"main\">\r\n        <div className=\"left-side\">\r\n          <EditableText class=\"main-text\" initialText=\"First Name\"/>\r\n          <EditableText class=\"main-text\" initialText=\"Last Name\"/>\r\n          <EditableText class=\"base-text\" initialText=\"Occupation\"/> \r\n        </div>\r\n\r\n        <div className=\"right-side\">\r\n          <EditableText class=\"base-text-right\" initialText=\"Address Line 1\"/>\r\n          <EditableText class=\"base-text-right\" initialText=\"Address Line 2\"/>\r\n          <EditableText class=\"base-text-right\" initialText=\"Phone\"/>\r\n          <EditableText class=\"base-text-right\" initialText=\"Email\"/>\r\n        </div>\r\n\r\n      </div>\r\n    )\r\n\r\n}\r\n\r\nexport default ResumeHeader;\r\n\r\n\r\n// header items need to conditionally render.\r\n// should we render seperate components based on an onclick?\r\n\r\n\r\n// constructor() {\r\n//   super()\r\n//   this.state = {\r\n//     personalInfo: {\r\n//       firstName: \"First Name\",\r\n//       lastName: \"Last Name\",\r\n//       occupation: \"Occupation\",\r\n//     },\r\n//     contactInfo: {\r\n//       addressLine1: \"Address Line 1\",\r\n//       addressLine2: \"Address Line 2\",\r\n//       town: \"Town/City\",\r\n//       country: \"Country\",\r\n//       postalCode: \"Postal Code\",\r\n//       phone: \"Phone Number\",\r\n//       email: \"Email Handle\",\r\n//     }\r\n//   }\r\n// }","import React from 'react';\r\nimport \"../styles/SchoolInfo.css\"\r\n\r\nfunction SchoolInfo(props){\r\n    return (\r\n      <div className=\"school-info\">\r\n        <div className=\"school\">\r\n          <p>{props.school}</p>\r\n          <p>{props.yearBegan} - {props.yearEnd}</p>\r\n        </div>\r\n        <div className=\"degree\">\r\n          <p>{props.degreeTitle}</p>\r\n          <p>{props.gpa}</p>\r\n        </div>\r\n        <div className=\"button-div\">\r\n          <i onClick={() => props.editSchool(props.id)} className=\"fas fa-edit\"></i>\r\n          <i className=\"fas fa-trash\" onClick={() => props.handleDelete(props.id)}></i>\r\n        </div>\r\n      </div>\r\n    )\r\n  \r\n\r\n}\r\n\r\nexport default SchoolInfo\r\n\r\n// had to use anonymous function in the button since we are passing in a variable that is available only in this context.","import React from 'react';\r\n\r\n\r\nfunction EducationForm(props){\r\n  if (props.isActive){\r\n    return (\r\n    <div>\r\n      <form onSubmit={props.handleSubmit} className=\"school-info\">\r\n        <div className=\"school\">\r\n          <input\r\n            onChange={props.handleChange}\r\n            required\r\n            type=\"text\"\r\n            value={props.school}\r\n            name=\"school\"\r\n            placeholder=\"Name of University\"\r\n          />\r\n          <br />\r\n          <input\r\n            onChange={props.handleChange}\r\n            required\r\n            className=\"year\"\r\n            type=\"text\"\r\n            value={props.yearBegan}\r\n            name=\"yearBegan\"\r\n            placeholder=\"YYYY\"\r\n          />\r\n          -\r\n          <input\r\n            onChange={props.handleChange}\r\n            required\r\n            className=\"year\"\r\n            type=\"text\"\r\n            value={props.yearEnd}\r\n            name=\"yearEnd\"\r\n            placeholder=\"YYYY\"\r\n          />\r\n        </div>\r\n        <div className=\"degree\">\r\n          <input\r\n            onChange={props.handleChange}\r\n            required\r\n            type=\"text\"\r\n            value={props.degreeTitle}\r\n            name=\"degreeTitle\"\r\n            placeholder=\"Title of Degree\"\r\n          />\r\n          <br />\r\n          <input\r\n            onChange={props.handleChange}\r\n            type=\"text\"\r\n            value={props.gpa}\r\n            name=\"gpa\"\r\n            placeholder=\"GPA\"\r\n          />\r\n        </div>\r\n        <div className=\"button-div\">\r\n          <i \r\n            onClick={props.toggleForm}\r\n            type=\"button\" \r\n            className=\"fas fa-times\"\r\n          ></i>\r\n          <label>\r\n            <button></button>\r\n            <i type=\"button\" className=\"fas fa-check-square\"></i>\r\n          </label>\r\n         \r\n        </div>\r\n\r\n      </form>\r\n    </div>\r\n    )\r\n  } else {\r\n    return (\r\n      <i onClick={props.toggleForm} className=\"fas fa-plus-circle\"></i>\r\n      )\r\n  }\r\n\r\n}\r\n\r\nexport default EducationForm","import React from 'react';\r\n\r\n\r\n// Uncontrolled form for updating the degrees array in the Education components state\r\n// state updates occur once form is submitted.  Form values are accessed using refs.\r\nclass EditEducation extends React.Component{\r\n  constructor() {\r\n    super();\r\n    // create a ref to store DOM inputs\r\n    this.school = React.createRef();\r\n    this.degreeTitle = React.createRef();\r\n    this.yearBegan = React.createRef();\r\n    this.yearEnd = React.createRef();\r\n    this.gpa = React.createRef();\r\n  }\r\n  \r\n  render() {\r\n    return (\r\n      <div>\r\n        <form \r\n          onSubmit={(e) =>  {\r\n            this.props.updateObject(\r\n              e, this.props.id, this.school.current.value, \r\n              this.yearBegan.current.value, this.yearEnd.current.value, this.degreeTitle.current.value, \r\n              this.gpa.current.value\r\n                )\r\n              }\r\n            }\r\n          className=\"school-info\"\r\n        >\r\n          <div className=\"school\">\r\n            <input\r\n              required\r\n              type=\"text\"\r\n              defaultValue={this.props.school}\r\n              ref={this.school}\r\n              placeholder=\"Name of University\"\r\n            />\r\n            <br />\r\n            <input\r\n              required\r\n              className=\"year\"\r\n              type=\"text\"\r\n              defaultValue={this.props.yearBegan}\r\n              ref={this.yearBegan}\r\n              placeholder=\"YYYY\"\r\n            />\r\n            -\r\n            <input\r\n  \r\n              required\r\n              className=\"year\"\r\n              type=\"text\"\r\n              defaultValue={this.props.yearEnd}\r\n              ref={this.yearEnd}\r\n              placeholder=\"YYYY\"\r\n            />\r\n          </div>\r\n          <div className=\"degree\">\r\n            <input\r\n              onChange={this.props.handleChange}\r\n              required\r\n              type=\"text\"\r\n              defaultValue={this.props.degreeTitle}\r\n              ref={this.degreeTitle}\r\n              placeholder=\"Title of Degree\"\r\n            />\r\n            <br />\r\n            <input\r\n              type=\"text\"\r\n              defaultValue={this.props.gpa}\r\n              ref={this.gpa}\r\n              placeholder=\"GPA\"\r\n            />\r\n          </div>\r\n          <div className=\"button-div\">\r\n            <i \r\n            onClick={() => this.props.toggleForm(this.props.id)}\r\n            type=\"button\" \r\n            className=\"fas fa-times\"\r\n          ></i>\r\n            <label>\r\n              <button></button>\r\n              <i className=\"fas fa-check-square\"></i>\r\n            </label>\r\n          </div>\r\n  \r\n        </form>\r\n      </div>\r\n      )\r\n  }\r\n}\r\n\r\nexport default EditEducation","import React from 'react';\r\nimport '../styles/Education.css'\r\nimport SchoolInfo from \"./SchoolInfo\"\r\nimport EducationForm from \"./EducationForm\"\r\nimport uniqid from 'uniqid'\r\nimport EditEducation from \"./EditEducation\"\r\n\r\nclass Education extends React.Component {\r\n  constructor(){\r\n    super()\r\n    this.state = {\r\n      degrees: [],\r\n      formIsActive: false,\r\n      school: \"\",\r\n      yearBegan: \"\",\r\n      yearEnd: \"\",\r\n      degreeTitle: \"\",\r\n      gpa: \"\",\r\n    }\r\n  }\r\n\r\n  handleChange = (event) => {\r\n    const {name, value} = event.target;\r\n    this.setState({ [name]: value })\r\n  }\r\n\r\n  handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    const obj = {\r\n      id: uniqid(),\r\n      school: this.state.school,\r\n      yearBegan: this.state.yearBegan,\r\n      yearEnd: this.state.yearEnd,\r\n      degreeTitle: this.state.degreeTitle,\r\n      gpa: this.state.gpa,\r\n      activeEdit: false,\r\n    }\r\n    this.setState(prevState => {\r\n      const list = prevState.degrees.concat(obj);\r\n      return {\r\n        degrees: list,\r\n        formIsActive: false,\r\n        school: \"\",\r\n        yearBegan: \"\",\r\n        yearEnd: \"\",\r\n        degreeTitle: \"\",\r\n        gpa: \"\",\r\n      }\r\n    })\r\n  }\r\n\r\n  handleDelete = (id) => {\r\n    this.setState(prevState => {\r\n      const list = prevState.degrees.filter(item => item.id !== id)\r\n      return {\r\n        degrees: list,\r\n      }\r\n    })\r\n  }\r\n\r\n  toggleObject = (id) => {\r\n    const index = this.state.degrees.findIndex(element => element.id === id)\r\n    let newArray = [...this.state.degrees]\r\n    newArray[index] = {...newArray[index], activeEdit: !newArray[index].activeEdit}\r\n    this.setState({\r\n      degrees: newArray,\r\n    })\r\n  }\r\n\r\n  updateObject = (event, id, school, yearBegan, yearEnd, degreeTitle, gpa) => {\r\n    event.preventDefault();\r\n    const index = this.state.degrees.findIndex(element => element.id === id)\r\n    let newArray = [...this.state.degrees]\r\n    newArray[index] = {\r\n      ...newArray[index],\r\n      activeEdit: !newArray[index].activeEdit,\r\n      school: school,\r\n      yearBegan: yearBegan,\r\n      yearEnd: yearEnd,\r\n      degreeTitle: degreeTitle,\r\n      gpa: gpa\r\n    }\r\n      this.setState({\r\n        degrees: newArray,\r\n      })\r\n  }\r\n\r\n\r\n  toggleForm = () => {\r\n    this.setState({ formIsActive: !this.state.formIsActive })\r\n  }\r\n\r\n  /* Why reference state in EditEducation? \r\n    it was originally going to be a controlled form. \r\n    It shouldn't make a difference either way so I'm leaving it in case I change my mind.*/\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h3>Education</h3>\r\n        {this.state.degrees.map((item, index) => {\r\n          if(item.activeEdit){\r\n            return (\r\n              <EditEducation \r\n              updateObject={this.updateObject}\r\n              toggleForm={this.toggleObject}\r\n              key={this.state.degrees[index].id}\r\n              id={this.state.degrees[index].id}\r\n              school={this.state.degrees[index].school}\r\n              yearBegan={this.state.degrees[index].yearBegan}\r\n              yearEnd={this.state.degrees[index].yearEnd}\r\n              degreeTitle={this.state.degrees[index].degreeTitle}\r\n              gpa={this.state.degrees[index].gpa}\r\n            />\r\n            )\r\n          } else {\r\n            return(\r\n              <SchoolInfo\r\n                handleDelete={this.handleDelete}\r\n                editSchool={this.toggleObject}\r\n                key={item.id}\r\n                id={item.id}\r\n                school={item.school}\r\n                yearBegan={item.yearBegan}\r\n                yearEnd={item.yearEnd}\r\n                degreeTitle={item.degreeTitle}\r\n                gpa={item.gpa}\r\n                activeEdit={item.activeEdit}\r\n              />\r\n            )\r\n          }\r\n        })}\r\n\r\n        <EducationForm \r\n          handleChange={this.handleChange}\r\n          handleSubmit={this.handleSubmit}\r\n          toggleForm={this.toggleForm}\r\n          isActive={this.state.formIsActive}\r\n          school={this.state.school}\r\n          yearBegan={this.state.yearBegan}\r\n          yearEnd={this.state.yearEnd}\r\n          degreeTitle={this.state.degreeTitle}\r\n          gpa={this.state.gpa}\r\n        />\r\n      </div>\r\n\r\n      \r\n    )\r\n  }\r\n}\r\n\r\nexport default Education\r\n\r\n\r\n\r\n\r\n\r\n","import React from 'react';\r\n\r\nfunction ExperienceForm(props){\r\n  if (props.isActive){\r\n    return (\r\n    <div>\r\n\r\n      <form onSubmit={props.id? (e) => props.submitObjectChange(e, props.id) : props.handleSubmit} className=\"work-info\">\r\n        <div className=\"left-column\">\r\n          <input\r\n            onChange={props.id? (event) => props.handleObjectChange(event, props.id) : props.handleChange}\r\n            required\r\n            type=\"text\"\r\n            value={props.company}\r\n            name=\"company\"\r\n            placeholder=\"Company\"\r\n          />\r\n          <br />\r\n          <input\r\n            onChange={props.id? (event) => props.handleObjectChange(event, props.id) : props.handleChange}\r\n            className=\"sub-text\"\r\n            required\r\n            type=\"text\"\r\n            value={props.location}\r\n            name=\"location\"\r\n            placeholder=\"Job Location\"\r\n          />\r\n          <br />\r\n          <input\r\n            onChange={props.id? (event) => props.handleObjectChange(event, props.id) : props.handleChange}\r\n            className=\"sub-text year\"\r\n            required\r\n            type=\"text\"\r\n            value={props.yearBegan}\r\n            name=\"yearBegan\"\r\n            placeholder=\"YYYY\"\r\n          />-\r\n          <input\r\n            onChange={props.id? (event) => props.handleObjectChange(event, props.id) : props.handleChange}\r\n            className=\"sub-text year\"\r\n            required\r\n            type=\"text\"\r\n            value={props.yearEnd}\r\n            name=\"yearEnd\"\r\n            placeholder=\"YYYY\"\r\n          />\r\n        </div>\r\n\r\n        <div className=\"right-column\">\r\n          <input\r\n              onChange={props.id? (event) => props.handleObjectChange(event, props.id) : props.handleChange}\r\n              required\r\n              type=\"text\"\r\n              value={props.title}\r\n              name=\"title\"\r\n              placeholder=\"Job Title\"\r\n          />\r\n          <br />\r\n          <textarea\r\n            onChange={props.id? (event) => props.handleObjectChange(event, props.id) : props.handleChange}\r\n            value={props.description}\r\n            name=\"description\"\r\n          />\r\n        </div>\r\n\r\n        <div className=\"button-div\">\r\n          <i \r\n            onClick={(props.id)? () => props.toggleForm(props.id) : props.toggleForm}\r\n            type=\"button\" \r\n            className=\"fas fa-times\"\r\n          ></i>\r\n          <label>\r\n            <button></button>\r\n            <i className=\"fas fa-check-square\"></i>\r\n          </label>\r\n        </div>\r\n        \r\n      </form>\r\n    </div>\r\n\r\n    \r\n    )\r\n  } else {\r\n    return (\r\n      <i onClick={props.toggleForm} className=\"fas fa-plus-circle\"></i>\r\n      )\r\n  }\r\n\r\n}\r\n\r\nexport default ExperienceForm","import React from 'react';\r\n\r\nfunction WorkInfo(props) {\r\n  return (\r\n    <div className=\"work-info\">\r\n      <div className=\"left-column\">\r\n        <p>{props.company}</p>\r\n        <p className=\"sub-text\">{props.location}</p>\r\n        <p className=\"sub-text\">{props.yearBegan} - {props.yearEnd}</p>\r\n      </div>\r\n      <div className=\"right-column\">\r\n        <p>{props.title}</p>\r\n        <p className=\"sub-text\">{props.description}</p>\r\n      </div>\r\n      <div className=\"button-div\">\r\n          <i onClick={() => props.editExperience(props.id)} className=\"fas fa-edit\"></i>\r\n          <i onClick={() => props.handleDelete(props.id)} className=\"fas fa-trash\"></i>\r\n        </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default WorkInfo","import uniqid from 'uniqid'\r\nimport React from 'react';\r\nimport '../styles/Experience.css'\r\nimport ExperienceForm from './ExperienceForm'\r\nimport WorkInfo from './WorkInfo'\r\n\r\nclass Experience extends React.Component{\r\n  // I think I should do like I did the school one but make the form component controlled this time.\r\n  // I doubt there will be any drawbacks.  Should be easy since the components are so similar.\r\n  constructor() {\r\n    super()\r\n    this.state = {\r\n      jobs: [],\r\n      formIsActive: false,\r\n      company: \"\",\r\n      location: \"\",\r\n      yearBegan: \"\",\r\n      yearEnd: \"\",\r\n      title: \"\",\r\n      description: \"Write approximately 2-3 sentences\",\r\n    }\r\n  }\r\n\r\n  handleDelete = (id) => {\r\n    this.setState(prevState => {\r\n      const list = prevState.jobs.filter(item => item.id !== id)\r\n      return {\r\n        jobs: list,\r\n      }\r\n    })\r\n  }\r\n\r\n  toggleForm = () => {\r\n    this.setState({ formIsActive: !this.state.formIsActive })\r\n  }\r\n\r\n  handleChange = (event) => {\r\n    const {name, value} = event.target;\r\n    this.setState({ [name]: value })\r\n  }\r\n\r\n  handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    const obj = {\r\n      id: uniqid(),\r\n      company: this.state.company,\r\n      yearBegan: this.state.yearBegan,\r\n      yearEnd: this.state.yearEnd,\r\n      location: this.state.location,\r\n      description: this.state.description,\r\n      title: this.state.title,\r\n      activeEdit: false,\r\n    }\r\n    this.setState(prevState => {\r\n      const list = prevState.jobs.concat(obj);\r\n      return {\r\n        jobs: list,\r\n        formIsActive: false,\r\n        company: \"\",\r\n        location: \"\",\r\n        yearBegan: \"\",\r\n        yearEnd: \"\",\r\n        title: \"\",\r\n        description: \"Write approximately 2-3 sentences\",\r\n      }\r\n    })\r\n  }\r\n\r\n  toggleObject = (id) => {\r\n    const index = this.state.jobs.findIndex(element => element.id === id)\r\n    let newArray = [...this.state.jobs]\r\n    newArray[index] = {...newArray[index], activeEdit: !newArray[index].activeEdit}\r\n    this.setState({\r\n      jobs: newArray,\r\n    })\r\n  }\r\n\r\n  handleObjectChange = (event, id) => {\r\n    const {name, value} = event.target;\r\n    const index = this.state.jobs.findIndex(element => element.id === id)\r\n    let newArray = [...this.state.jobs]\r\n    newArray[index] = {...newArray[index], [name]: value}\r\n    this.setState({\r\n      jobs: newArray,\r\n    })\r\n  }\r\n\r\n  submitObjectChange = (event, id) => {\r\n    event.preventDefault();\r\n    this.toggleObject(id);\r\n  }\r\n\r\n  // just need to edit the info.  Should be able to re-use the form this time\r\n  // not sure if I can use the state from the item method or not.\r\n  // \r\n  render() {\r\n    return (\r\n      <div>\r\n        <h3>Work Experience</h3>\r\n          {this.state.jobs.map((item) => {\r\n            if(!item.activeEdit){\r\n              return (\r\n                <WorkInfo\r\n                  key={item.id}\r\n                  id={item.id}\r\n                  company={item.company}\r\n                  location={item.location}\r\n                  yearBegan={item.yearBegan}\r\n                  yearEnd={item.yearEnd}\r\n                  title={item.title}\r\n                  description={item.description}\r\n                  handleDelete={this.handleDelete}\r\n                  editExperience={this.toggleObject}\r\n                />\r\n            )\r\n            } else {\r\n              return (\r\n                <ExperienceForm\r\n                  key={item.id}\r\n                  id={item.id}\r\n                  isActive={true}\r\n                  company={item.company}\r\n                  location={item.location}\r\n                  yearBegan={item.yearBegan}\r\n                  yearEnd={item.yearEnd}\r\n                  title={item.title}\r\n                  description={item.description}\r\n                  handleObjectChange={this.handleObjectChange}\r\n                  toggleForm={this.toggleObject}\r\n                  submitObjectChange={this.submitObjectChange}\r\n                />\r\n              )\r\n            }\r\n\r\n          })}\r\n          <ExperienceForm\r\n            isActive={this.state.formIsActive}\r\n            toggleForm={this.toggleForm}\r\n            description={this.state.description}\r\n            company={this.state.company}\r\n            location={this.state.location}\r\n            yearBegan={this.state.yearBegan}\r\n            yearEnd={this.state.yearEnd}\r\n            title={this.state.title}\r\n            handleChange={this.handleChange}\r\n            handleSubmit={this.handleSubmit}\r\n          /> \r\n      </div>\r\n    )\r\n\r\n  }\r\n\r\n}\r\n\r\nexport default Experience;","import React from 'react'\r\n\r\nexport default function SkillsComponent(props) {\r\n  return (\r\n    <div>\r\n      <h3 className=\"skills\">Skills</h3>\r\n      <form onSubmit={props.handleSubmit} className=\"skills\">\r\n          <input \r\n            type=\"text\"\r\n            placeholder=\"+ Skill\"\r\n            name=\"skill\"\r\n            value={props.skill}\r\n            onChange={props.handleChange}\r\n      />\r\n      </form>\r\n      <div className=\"skills-list\">\r\n      {props.skills.map((skill) => {\r\n          return (\r\n              <div key={skill.id} className=\"skill-card\">\r\n                <div>\r\n                  <p className=\"skill-element\">{skill.text}</p>\r\n                  <i \r\n                    className=\"fas fa-times\"\r\n                    onClick={() => props.handleDelete(skill.id)}\r\n                  ></i>\r\n                </div>\r\n              </div>\r\n            )\r\n          })\r\n      }\r\n      </div>\r\n\r\n\r\n    </div>\r\n\r\n  )\r\n}\r\n","import React, { Component } from 'react'\r\nimport SkillsComponent from './SkillsComponent'\r\nimport uniqid from 'uniqid'\r\nimport '../styles/SkillsContainer.css'\r\n\r\nexport default class SkillsContainer extends Component {\r\n  constructor() {\r\n    super()\r\n    this.state = {\r\n      skill: \"\",\r\n      skills: [],\r\n    }\r\n  }\r\n\r\n  handleChange = (event) => {\r\n    const {name, value} = event.target;\r\n    this.setState({[name]: value})\r\n  }\r\n\r\n  handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    this.setState(prevState => {\r\n      const obj = {\r\n        id: uniqid(),\r\n        text: this.state.skill,\r\n      }\r\n      let list = prevState.skills.concat(obj);\r\n      return {\r\n        skill: \"\",\r\n        skills: list,\r\n      }\r\n    })\r\n  }\r\n\r\n  handleDelete = (id) => {\r\n    this.setState(prevState => {\r\n      const list = prevState.skills.filter(item => item.id !== id)\r\n      return {\r\n        skills: list,\r\n      }\r\n    })\r\n  }\r\n\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <SkillsComponent\r\n          skill={this.state.skill}\r\n          skills={this.state.skills}\r\n          handleChange={this.handleChange}\r\n          handleSubmit={this.handleSubmit}\r\n          handleDelete={this.handleDelete}\r\n        />\r\n\r\n      </div>\r\n    )\r\n  }\r\n}\r\n","import React from 'react';\r\nimport '../styles/Resume.css'\r\nimport ResumeHeader from './ResumeHeader'\r\nimport Education from './Education'\r\nimport Experience from './Experience'\r\nimport SkillsContainer from './SkillsContainer'\r\n\r\nfunction Resume(){\r\n  return (\r\n  <div className=\"resume-body\">\r\n    <ResumeHeader />\r\n    <hr />\r\n    <Education />\r\n    <hr />\r\n    <Experience />\r\n    <hr />\r\n    <SkillsContainer />\r\n  </div>\r\n  )\r\n}\r\n\r\nexport default Resume","import React from 'react';\r\n\r\nfunction MyHeader(){\r\n\r\n\r\n\r\n  return (\r\n    <div className=\"header\">\r\n      \r\n      {/* <i className=\"fas fa-window-close\"></i> */}\r\n      <h1>CV Builder</h1>\r\n      <i className=\"fas fa-file-signature\"></i>\r\n    </div>\r\n  \r\n  )\r\n}\r\n\r\nexport default MyHeader","\nimport './App.css';\n\nimport Resume from './components/Resume';\nimport MyHeader from './components/MyHeader';\nimport 'font-awesome/css/font-awesome.min.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n        <MyHeader />\n        <Resume />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}